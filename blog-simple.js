// –ü—Ä–æ—Å—Ç–∞—è –∏ –Ω–∞–¥–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è –±–ª–æ–≥–∞
const POSTS_STORAGE_KEY = 'flamingo_blog_posts';

// –ü—Ä–æ—Å—Ç–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ—Å—Ç–∞
function createPost(title, content, author, locale = 'all') {
    return {
        id: Date.now().toString(),
        title: title.trim(),
        content: content.trim(),
        author: author.trim(),
        locale: locale,
        date: new Date().toISOString(),
        published: true
    };
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ—Å—Ç–æ–≤ –≤ localStorage
function savePosts(posts) {
    try {
        localStorage.setItem(POSTS_STORAGE_KEY, JSON.stringify(posts));
        return true;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error);
        return false;
    }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ—Å—Ç–∞ –≤ GitHub —á–µ—Ä–µ–∑ Netlify Git Gateway
async function saveToGitHub(post) {
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–∫–µ–Ω Netlify Identity
        if (!window.netlifyIdentity || !window.netlifyIdentity.currentUser()) {
            console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –≤ Netlify Identity');
            return false;
        }

        const token = await window.netlifyIdentity.currentUser().jwt();

        // –°–æ–∑–¥–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
        const date = new Date(post.date);
        const dateStr = date.toISOString().split('T')[0]; // YYYY-MM-DD
        const slug = post.title.toLowerCase()
            .replace(/[^a-z–∞-—è—ë0-9\s]/gi, '')
            .replace(/\s+/g, '-')
            .substring(0, 50);
        const filename = `${dateStr}-${slug}.md`;

        // –°–æ–∑–¥–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ markdown —Ñ–∞–π–ª–∞
        const markdownContent = `---
title: "${post.title}"
date: ${post.date}
excerpt: "${post.title}"
author: "${post.author}"
locale: "${post.locale}"
published: true
---

${post.content}`;

        // –ö–æ–¥–∏—Ä—É–µ–º –≤ base64
        const encodedContent = btoa(unescape(encodeURIComponent(markdownContent)));

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ GitHub —á–µ—Ä–µ–∑ Netlify Git Gateway
        const apiUrl = `/.netlify/git/github/contents/content/blog/${filename}`;

        const response = await fetch(apiUrl, {
            method: 'PUT',
            headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json',
                'Accept': 'application/vnd.github.v3+json',
                'X-Requested-With': 'XMLHttpRequest'
            },
            body: JSON.stringify({
                message: `–ù–æ–≤–∞—è —Å—Ç–∞—Ç—å—è: ${post.title}`,
                content: encodedContent,
                branch: 'main'
            })
        });

        if (response.ok) {
            console.log('‚úÖ –°—Ç–∞—Ç—å—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ GitHub');
            return true;
        } else {
            const errorText = await response.text();
            console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ GitHub:', response.status, errorText);
            return false;
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ GitHub:', error);
        return false;
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å—Ç–æ–≤ –∏–∑ localStorage
function loadPosts() {
    try {
        const stored = localStorage.getItem(POSTS_STORAGE_KEY);
        return stored ? JSON.parse(stored) : [];
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error);
        return [];
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å—Ç–æ–≤ –∏–∑ GitHub (—á–µ—Ä–µ–∑ Netlify Function)
async function loadPostsFromGitHub() {
    try {
        console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å—Ç—ã –∏–∑ GitHub...');

        // –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —á–µ—Ä–µ–∑ Netlify Function
        const response = await fetch('/.netlify/functions/get-posts');
        if (response.ok) {
            const posts = await response.json();
            console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑ GitHub:', posts.length, '–ø–æ—Å—Ç–æ–≤');

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
            savePosts(posts);
            return posts;
        } else {
            console.log('‚ùå Netlify Function –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
            return [];
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ GitHub:', error);
        return [];
    }
}

// –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ GitHub, –µ—Å–ª–∏ localStorage –ø—É—Å—Ç
async function syncPosts() {
    const localPosts = loadPosts();

    if (localPosts.length === 0) {
        console.log('üì• localStorage –ø—É—Å—Ç, –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ GitHub...');
        const githubPosts = await loadPostsFromGitHub();
        return githubPosts.length > 0 ? githubPosts : localPosts;
    }

    return localPosts;
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞ (—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ GitHub)
async function addPost(title, content, author, locale = 'all') {
    if (!title || !content) {
        alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ!');
        return false;
    }

    try {
        // –°–æ–∑–¥–∞–µ–º –ø–æ—Å—Ç
        const newPost = createPost(title, content, author, locale);

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
        const posts = loadPosts();
        posts.unshift(newPost);
        savePosts(posts);

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ GitHub
        const success = await saveToGitHub(newPost);

        if (success) {
            return true;
        } else {
            // –ï—Å–ª–∏ GitHub –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –æ—Å—Ç–∞–≤–ª—è–µ–º –≤ localStorage
            console.warn('GitHub —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å, —Å—Ç–∞—Ç—å—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ');
            return true;
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ—Å—Ç–∞:', error);
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—å–∏: ' + error.message);
        return false;
    }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å—Ç–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è (—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π)
async function getPosts(locale = null) {
    const posts = await syncPosts();

    if (!locale) {
        return posts; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ –ø–æ—Å—Ç—ã
    }

    // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ —è–∑—ã–∫—É
    return posts.filter(post => {
        const postLocale = (post.locale || 'all').toLowerCase();
        return postLocale === 'all' || postLocale === locale.toLowerCase();
    });
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ—Å—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
async function renderBlogPosts(containerId = 'posts-container', locale = null) {
    const container = document.getElementById(containerId);
    if (!container) {
        console.log('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø–æ—Å—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω:', containerId);
        return;
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    container.innerHTML = '<p style="text-align:center;color:#666;padding:2rem;">üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç—å–∏...</p>';

    const posts = await getPosts(locale);
    console.log('–û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–æ—Å—Ç—ã:', posts.length, '–¥–ª—è —è–∑—ã–∫–∞:', locale);

    if (posts.length === 0) {
        container.innerHTML = '<p style="text-align:center;color:#666;padding:2rem;">–ü–æ–∫–∞ –Ω–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π.</p>';
        return;
    }

    const postsHTML = posts.map(post => `
        <article style="background:#fff;padding:1.5rem;border-radius:8px;box-shadow:0 2px 8px rgba(0,0,0,0.1);margin-bottom:1rem;">
            <h2 style="margin:0 0 0.5rem 0;color:#333;">${escapeHtml(post.title)}</h2>
            <div style="color:#666;font-size:0.9rem;margin-bottom:1rem;">
                ${new Date(post.date).toLocaleDateString('ru-RU')} ‚Ä¢ ${escapeHtml(post.author)}
            </div>
            <div style="line-height:1.6;color:#444;">
                ${escapeHtml(post.content).replace(/\n/g, '<br>')}
            </div>
        </article>
    `).join('');

    container.innerHTML = postsHTML;
}

// –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ HTML
function escapeHtml(text) {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
}

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —è–∑—ã–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function getCurrentLocale() {
    const path = window.location.pathname.toLowerCase();
    if (path.includes('blog-et') || path.includes('index.html') || path.endsWith('/')) {
        return 'et';
    } else if (path.includes('blog-ru') || path.includes('ru.html')) {
        return 'ru';
    }
    return null; // –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', async function() {
    const container = document.getElementById('posts-container');
    if (container) {
        const locale = getCurrentLocale();
        console.log('–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å—Ç–æ–≤ –¥–ª—è —è–∑—ã–∫–∞:', locale);
        await renderBlogPosts('posts-container', locale);
    }
});

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∞–¥–º–∏–Ω–∫–µ
window.FlamingoBlogSimple = {
    addPost,
    getPosts,
    renderBlogPosts,
    getCurrentLocale,
    loadPosts,
    savePosts,
    loadPostsFromGitHub,
    syncPosts
};
